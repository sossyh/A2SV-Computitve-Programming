t = int(input())

def isinbound(i, j, r, c):
    return 0 <= i < r and 0 <= j < c

for _ in range(t):
    n, m = map(int, input().split())
    matrix = []
    
    for _ in range(n):
        arr = list(map(int, input().split()))
        matrix.append(arr)
    
    ans = -float("inf")
    for i in range(n):
        for j in range(m):
            diagonal = matrix[i][j]
            diagonal2 = 0
            
            for k in range(1, min(n, m)):
                upi, upj = i - k, j - k
                if isinbound(upi, upj, n, m):
                    diagonal += matrix[upi][upj]
                
                lr, lj = i + k, j + k
                if isinbound(lr, lj, n, m):
                    diagonal += matrix[lr][lj]
            
            for l in range(1, min(n, m)):
                upr, upc = i - l, j + l
                if isinbound(upr, upc, n, m):
                    diagonal2 += matrix[upr][upc]
                
                lwr, lwc = i + l, j - l
                if isinbound(lwr, lwc, n, m):
                    diagonal2 += matrix[lwr][lwc]
                                   
            ans = max(ans, diagonal + diagonal2)
    
    print(ans)
                
